{"version":3,"sources":["../../src/pages/setting/setting.module.ts","../../src/pages/setting/setting.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AAC8B;AAWtE;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;gBACrC,4EAAe;aAChB;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACdY;AACe;AACmC;AAErC;AACd;AAC4C;AAErF;;;;;GAKG;AAOH;IAGE,qBAAmB,OAAsB,EAAS,SAAoB,EAC5D,eAAwC,EAAQ,SAA2B,EAAQ,OAAe,EAAQ,qBAA2C;QAD5I,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC5D,oBAAe,GAAf,eAAe,CAAyB;QAAQ,cAAS,GAAT,SAAS,CAAkB;QAAQ,YAAO,GAAP,OAAO,CAAQ;QAAQ,0BAAqB,GAArB,qBAAqB,CAAsB;QAE7J,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACrD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,iCAAW,GAAX;QAAA,iBAyBC;QAvBC,IAAI,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,eAAe,GAAC,eAAe,CAAC,CAAC;QAC7C,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,EAAC;YACxB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAE1C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,iBAAO;gBACnC,KAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,yDAAyD,EAAC,OAAO,CAAC,KAAK,EAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,aAAG;oBACtJ,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAC,GAAG,CAAC,CAAC;gBAExC,CAAC,CAAC;gBAEF,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACvB,OAAO,CAAC,iBAAiB,GAAC,KAAI,CAAC,gBAAgB,CAAC;gBAChD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,OAAO,CAAC,CAAC;gBACpC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,OAAO,CAAC,CAAC;YACnC,CAAC,CAAC;QAEJ,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAEtC,CAAC;IACH,CAAC;IACD,oCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IArCU,WAAW;QAJvB,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;wMAI4B,CAAa,gEAAoB,2GAAS;YAC3C,QAAoI;OAJpJ,WAAW,CAyCvB;IAAD,CAAC;AAAA;SAzCY,WAAW,e","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingPage } from './setting';\nimport { TranslateModule, TranslateLoader} from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    SettingPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingPage),\n    TranslateModule,\n  ],\n})\nexport class SettingPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/setting/setting.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { LanguageServiceProvider } from '../../providers/language-service/language-service';\nimport { LanguageModel } from \"../../models/language.model\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { Storage } from '@ionic/storage';\nimport{PoviderForAllProvider} from '../../providers/povider-for-all/povider-for-all';\n\n/**\n * Generated class for the SettingPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage({\n  name:'page-setting'\n})\n@Component({\n  selector: 'page-setting',\n  templateUrl: 'setting.html',\n})\nexport class SettingPage {\n  languageSelected : any;\n  languages : Array<LanguageModel>;\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n     public languageService: LanguageServiceProvider,public translate: TranslateService,public storage:Storage,public poviderForAllProvider:PoviderForAllProvider\n     ) {\n    this.languages = this.languageService.getLanguages();\n    this.setLanguage();\n  }\n  setLanguage(){\n    \n    let defaultLanguage = this.translate.getDefaultLang();\n    console.log(\"LANGUAGE === \"+defaultLanguage);\n    if(this.languageSelected){\n      this.translate.setDefaultLang(this.languageSelected);\n      this.translate.use(this.languageSelected);\n      \n      this.storage.get('user').then(details =>{\n        this.poviderForAllProvider.UpdateLanguage('https://sapir.app/wp-json/mobileapi/update_app_language',details.token,this.languageSelected).subscribe(val=>{\n        console.log(\"Change Language === \",val);\n         \n        })\n\n        console.table(details);\n        details.selected_language=this.languageSelected;\n        console.log(\"user details\",details);\n        this.storage.set('user',details);\n      })\n\n    }else{\n      this.languageSelected = defaultLanguage;\n      this.translate.use(defaultLanguage);\n\n    }\n  }\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SettingPage');\n  }\n\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/setting/setting.ts"],"sourceRoot":""}